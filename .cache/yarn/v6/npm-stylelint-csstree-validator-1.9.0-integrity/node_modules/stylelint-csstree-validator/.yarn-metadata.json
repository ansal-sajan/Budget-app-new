{
  "manifest": {
    "name": "stylelint-csstree-validator",
    "version": "1.9.0",
    "description": "Stylelint plugin to validate CSS syntax",
    "repository": {
      "type": "git",
      "url": "https://github.com/csstree/stylelint-validator.git"
    },
    "author": {
      "name": "Roman Dvornov",
      "email": "rdvornov@gmail.com"
    },
    "license": "MIT",
    "main": "index.js",
    "keywords": [
      "stylelint-plugin",
      "stylelint",
      "csstree",
      "css",
      "validator",
      "syntax"
    ],
    "scripts": {
      "test": "tape test | tap-spec",
      "travis": "npm run test"
    },
    "engines": {
      "node": ">=8.0.0"
    },
    "dependencies": {
      "css-tree": "^1.0.0"
    },
    "peerDependencies": {
      "stylelint": ">=7.0.0 <14.0.0"
    },
    "devDependencies": {
      "postcss-less": "^3.1.4",
      "postcss-scss": "^2.0.0",
      "stylelint": "^13.0.0",
      "stylelint-rule-tester": "^0.6.2",
      "tap-spec": "^5.0.0",
      "tape": "^4.11.0"
    },
    "eslintConfig": {
      "env": {
        "node": true,
        "es6": true
      },
      "rules": {
        "no-duplicate-case": 2,
        "no-undef": 2,
        "no-unused-vars": [
          2,
          {
            "vars": "all",
            "args": "after-used"
          }
        ]
      }
    },
    "files": [
      "syntax-extension",
      "index.js"
    ],
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-stylelint-csstree-validator-1.9.0-integrity/node_modules/stylelint-csstree-validator/package.json",
    "readmeFilename": "README.md",
    "readme": "[![NPM version](https://img.shields.io/npm/v/stylelint-csstree-validator.svg)](https://www.npmjs.com/package/stylelint-csstree-validator)\n[![Build Status](https://travis-ci.org/csstree/stylelint-validator.svg?branch=master)](https://travis-ci.org/csstree/stylelint-validator)\n\n# stylelint-csstree-validator\n\nCSS syntax validator based on [csstree](https://github.com/csstree/csstree) as plugin for [stylelint](http://stylelint.io/). Currently it's only checking declaration values to match W3C specs and browsers extensions. It would be extended in future to validate other parts of CSS.\n\n> Validator is designed to check CSS syntax only. However PostCSS (that used by stylelint as backend) may parse other syntaxes like Less or Sass and can be used for these syntaxes too. In this case validator is limited to check declaration that doesn't contain any CSS extension (e.g. variables).\n\n## Install\n\n```\n$ npm install --save-dev stylelint-csstree-validator\n```\n\n## Usage\n\nSetup plugin in your [stylelint config](http://stylelint.io/user-guide/configuration/):\n\n```json\n{\n  \"plugins\": [\n    \"stylelint-csstree-validator\"\n  ],\n  \"rules\": {\n    \"csstree/validator\": true\n  }\n}\n```\n\n### Options\n\n#### properties\n\nType: `Object` or `null`  \nDefault: `null`\n\nOverrides or/and extends property definition dictionary. CSS [Value Definition Syntax](https://github.com/csstree/csstree/blob/master/docs/definition-syntax.md) is used to define value's syntax. If definition starts with `|` it added to existing definition if any. See [CSS syntax reference](https://csstree.github.io/docs/syntax/) for default definitions.\n\nIn the following example we extend `width` property and defines `size`:\n\n```json\n{\n  \"plugins\": [\n    \"stylelint-csstree-validator\"\n  ],\n  \"rules\": {\n    \"csstree/validator\": {\n      \"properties\": {\n        \"width\": \"| new-keyword | custom-function(<length>, <percentage>)\",\n        \"size\": \"<length-percentage>\"\n      }\n    }\n  }\n}\n```\n\nUsing property definitions with the syntax `<any-value>` is an alternative for `ignore` option.\n\n```json\n{\n  \"plugins\": [\n    \"stylelint-csstree-validator\"\n  ],\n  \"rules\": {\n    \"csstree/validator\": {\n      \"properties\": {\n        \"my-custom-property\": \"<any-value>\"\n      }\n    }\n  }\n}\n```\n\n#### types\n\nType: `Object` or `null`  \nDefault: `null`\n\nOverrides or/and extends type definition dictionary. CSS [Value Definition Syntax](https://github.com/csstree/csstree/blob/master/docs/definition-syntax.md) is used to define value's syntax. If definition starts with `|` it added to existing definition if any. See [CSS syntax reference](https://csstree.github.io/docs/syntax/) for default definitions.\n\nIn the following example we define new functional type `my-fn()` and extend `color` type:\n\n```json\n{\n  \"plugins\": [\n    \"stylelint-csstree-validator\"\n  ],\n  \"rules\": {\n    \"csstree/validator\": {\n      \"properties\": {\n        \"some-property\": \"<my-fn()>\"\n      },\n      \"types\": {\n        \"color\": \"| darken(<color>, [ <percentage> | <number [0, 1]> ])\",\n        \"my-fn()\": \"my-fn( <length-percentage> )\"\n      }\n    }\n  }\n}\n```\n\n#### ignore\n\nType: `Array` or `false`  \nDefault: `false`\n\nDefines a list of property names that should be ignored by the validator.\n\n```json\n{\n  \"plugins\": [\n    \"stylelint-csstree-validator\"\n  ],\n  \"rules\": {\n    \"csstree/validator\": {\n      \"ignore\": [\"composes\", \"foo\", \"bar\"]\n    }\n  }\n}\n```\n\nIn this example, plugin would not test declaration with property name `composes`, `foo` or `bar`. As a result, no warnings for these declarations.\n\n#### ignoreValue\n\nType: `RegExp`  \nDefault: `false`\n\nDefines a pattern for values that should be ignored by the validator.\n\n```json\n{\n  \"plugins\": [\n    \"stylelint-csstree-validator\"\n  ],\n  \"rules\": {\n    \"csstree/validator\": {\n      \"ignoreValue\": \"^pattern$\"\n    }\n  }\n}\n```\n\nIn this example, the plugin will not report warnings for values that match the given pattern. Warnings will still be reported for properties.\n\n## License\n\nMIT\n",
    "licenseText": "Copyright (C) 2016-2018 by Roman Dvornov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/stylelint-csstree-validator/-/stylelint-csstree-validator-1.9.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/stylelint-csstree-validator/-/stylelint-csstree-validator-1.9.0.tgz",
    "hash": "",
    "integrity": "sha512-fVbtWDEWzux/bZSPBk9tD/bvyc8bSmb52BvUDjcduOzXqKqOyFHUvFayVr9ic88l8KJEVV0Ujab9ah5oTdX4Uw==",
    "registry": "npm",
    "packageName": "stylelint-csstree-validator",
    "cacheIntegrity": "sha512-fVbtWDEWzux/bZSPBk9tD/bvyc8bSmb52BvUDjcduOzXqKqOyFHUvFayVr9ic88l8KJEVV0Ujab9ah5oTdX4Uw== sha1-n3lx2Hv1JfVOIENDKfpeJ+5OlJE="
  },
  "registry": "npm",
  "hash": "7d56ed583116ceec7f6d948f064f6d0ff6efc9cf1b4a66f9d81bd40e371db8ecd7a8aa8ec851d4bc56b256bf6273cf25f0a244555d148da6fd6a1e684dd5f853"
}