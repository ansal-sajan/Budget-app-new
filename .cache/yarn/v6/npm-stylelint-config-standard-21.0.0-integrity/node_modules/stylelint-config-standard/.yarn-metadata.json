{
  "manifest": {
    "name": "stylelint-config-standard",
    "version": "21.0.0",
    "description": "Standard shareable config for stylelint",
    "keywords": [
      "stylelint",
      "stylelint-config",
      "standard"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/stylelint/stylelint-config-standard.git"
    },
    "license": "MIT",
    "author": {
      "name": "stylelint"
    },
    "main": "index.js",
    "files": [
      "index.js"
    ],
    "scripts": {
      "format": "prettier . --write",
      "prepare": "is-ci || husky install",
      "lint:formatting": "prettier . --check",
      "lint:js": "eslint . --ignore-path .gitignore",
      "lint:md": "remark . --quiet --frail --ignore-path .gitignore",
      "lint": "npm-run-all --parallel lint:*",
      "prepublishOnly": "pinst --disable",
      "postpublish": "pinst --enable",
      "release": "np",
      "test": "jest",
      "watch": "jest --watch"
    },
    "lint-staged": {
      "*.js": "eslint --cache --fix",
      "*.{js,md,yml}": "prettier --write"
    },
    "prettier": "@stylelint/prettier-config",
    "eslintConfig": {
      "extends": [
        "stylelint"
      ]
    },
    "remarkConfig": {
      "plugins": [
        "@stylelint/remark-preset"
      ]
    },
    "dependencies": {
      "stylelint-config-recommended": "^4.0.0"
    },
    "devDependencies": {
      "@stylelint/prettier-config": "^2.0.0",
      "@stylelint/remark-preset": "^2.0.0",
      "eslint": "^7.21.0",
      "eslint-config-stylelint": "^13.1.0",
      "husky": "^5.1.3",
      "is-ci": "^3.0.0",
      "jest": "^26.6.3",
      "lint-staged": "^10.5.4",
      "np": "^7.4.0",
      "npm-run-all": "^4.1.5",
      "pinst": "^2.1.6",
      "prettier": "^2.2.1",
      "remark-cli": "^9.0.0",
      "stylelint": "^13.12.0"
    },
    "peerDependencies": {
      "stylelint": "^13.12.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-stylelint-config-standard-21.0.0-integrity/node_modules/stylelint-config-standard/package.json",
    "readmeFilename": "README.md",
    "readme": "# stylelint-config-standard\n\n[![NPM version](https://img.shields.io/npm/v/stylelint-config-standard.svg)](https://www.npmjs.org/package/stylelint-config-standard) [![Build Status](https://github.com/stylelint/stylelint-config-standard/workflows/CI/badge.svg)](https://github.com/stylelint/stylelint-config-standard/actions)\n\n> The standard shareable config for stylelint.\n\nExtends [`stylelint-config-recommended`](https://github.com/stylelint/stylelint-config-recommended).\n\nTurns on additional rules to enforce the common stylistic conventions found within a handful of CSS styleguides, including: [The Idiomatic CSS Principles](https://github.com/necolas/idiomatic-css),\n[Google's CSS Style Guide](https://google.github.io/styleguide/htmlcssguide.html#CSS_Formatting_Rules), [Airbnb's Styleguide](https://github.com/airbnb/css#css), and [@mdo's Code Guide](https://codeguide.co/#css).\n\nIt favours flexibility over strictness for things like multi-line lists and single-line rulesets, and tries to avoid potentially divisive rules.\n\nUse it as is or as a foundation for your own config.\n\nTo see the rules that this config uses, please read the [config itself](./index.js).\n\n## Example\n\n<!-- prettier-ignore -->\n```css\n@import url(x.css);\n@import url(y.css);\n\n/**\n * Multi-line comment\n */\n\n.selector-1,\n.selector-2,\n.selector-3[type=\"text\"] {\n  background: linear-gradient(#fff, rgba(0, 0, 0, 0.8));\n  box-sizing: border-box;\n  display: block;\n  color: #333;\n}\n\n.selector-a,\n.selector-b:not(:first-child) {\n  padding: 10px !important;\n  top: calc(calc(1em * 2) / 3);\n}\n\n.selector-x { width: 10%; }\n.selector-y { width: 20%; }\n.selector-z { width: 30%; }\n\n/* Single-line comment */\n\n@media (min-width >= 60em) {\n  .selector {\n    /* Flush to parent comment */\n    transform: translate(1, 1) scale(3);\n  }\n}\n\n@media (orientation: portrait), projection and (color) {\n  .selector-i + .selector-ii {\n    background: color(rgb(0, 0, 0) lightness(50%));\n    font-family: helvetica, \"arial black\", sans-serif;\n  }\n}\n\n/* Flush single line comment */\n@media\n  screen and (min-resolution: 192dpi),\n  screen and (min-resolution: 2dppx) {\n  .selector {\n    background-image:\n      repeating-linear-gradient(\n        -45deg,\n        transparent,\n        #fff 25px,\n        rgba(255, 255, 255, 1) 50px\n      );\n    margin: 10px;\n    margin-bottom: 5px;\n    box-shadow:\n      0 1px 1px #000,\n      0 1px 0 #fff,\n      2px 2px 1px 1px #ccc inset;\n    height: 10rem;\n  }\n\n  /* Flush nested single line comment */\n  .selector::after {\n    content: 'â†’';\n    background-image: url(x.svg);\n  }\n}\n```\n\n_Note: the config is tested against this example, as such the example contains plenty of CSS syntax, formatting and features._\n\n## Installation\n\n```bash\nnpm install stylelint-config-standard --save-dev\n```\n\n## Usage\n\nIf you've installed `stylelint-config-standard` locally within your project, just set your `stylelint` config to:\n\n```json\n{\n  \"extends\": \"stylelint-config-standard\"\n}\n```\n\nIf you've globally installed `stylelint-config-standard` using the `-g` flag, then you'll need to use the absolute path to `stylelint-config-standard` in your config e.g.\n\n```json\n{\n  \"extends\": \"/absolute/path/to/stylelint-config-standard\"\n}\n```\n\nSince [stylelint 9.7.0](https://github.com/stylelint/stylelint/blob/9.7.0/CHANGELOG.md#970), you can simply use the globally installed configuration name instead of the absolute path:\n\n```json\n{\n  \"extends\": \"stylelint-config-standard\"\n}\n```\n\n### Extending the config\n\nSimply add a `\"rules\"` key to your config, then add your overrides and additions there.\n\nFor example, to change the `at-rule-no-unknown` rule to use its `ignoreAtRules` option, change the `indentation` to tabs, turn off the `number-leading-zero` rule,and add the `unit-allowed-list` rule:\n\n```json\n{\n  \"extends\": \"stylelint-config-standard\",\n  \"rules\": {\n    \"at-rule-no-unknown\": [\n      true,\n      {\n        \"ignoreAtRules\": [\"extends\", \"ignores\"]\n      }\n    ],\n    \"indentation\": \"tab\",\n    \"number-leading-zero\": null,\n    \"unit-allowed-list\": [\"em\", \"rem\", \"s\"]\n  }\n}\n```\n\n#### Suggested additions\n\n`stylelint-config-standard` is a great foundation for your own config. You can extend it to create a tailored and much stricter config:\n\n- Specify what quotes must be used using:\n  - [`font-family-name-quotes`](https://github.com/stylelint/stylelint/blob/master/lib/rules/font-family-name-quotes/README.md)\n  - [`function-url-quotes`](https://github.com/stylelint/stylelint/blob/master/lib/rules/function-url-quotes/README.md)\n  - [`selector-attribute-quotes`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-attribute-quotes/README.md)\n  - [`string-quotes`](https://github.com/stylelint/stylelint/blob/master/lib/rules/string-quotes/README.md)\n- If you use [`autoprefixer`](https://github.com/postcss/autoprefixer) you'll want to disallow vendor prefixes using:\n  - [`at-rule-no-vendor-prefix`](https://github.com/stylelint/stylelint/blob/master/lib/rules/at-rule-no-vendor-prefix/README.md)\n  - [`media-feature-name-no-vendor-prefix`](https://github.com/stylelint/stylelint/blob/master/lib/rules/media-feature-name-no-vendor-prefix/README.md)\n  - [`property-no-vendor-prefix`](https://github.com/stylelint/stylelint/blob/master/lib/rules/property-no-vendor-prefix/README.md)\n  - [`selector-no-vendor-prefix`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-no-vendor-prefix/README.md)\n  - [`value-no-vendor-prefix`](https://github.com/stylelint/stylelint/blob/master/lib/rules/value-no-vendor-prefix/README.md)\n- Control specificity using:\n  - [`max-nesting-depth`](https://github.com/stylelint/stylelint/blob/master/lib/rules/max-nesting-depth/README.md)\n  - [`selector-max-compound-selectors`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-compound-selectors/README.md)\n  - [`selector-max-specificity`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-specificity/README.md)\n- Specify acceptable selector types, units, properties, functions and words in comments using:\n  - [`at-rule-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/at-rule-disallowed-list/README.md)\n  - [`at-rule-allowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/at-rule-allowed-list/README.md)\n  - [`color-named`](https://github.com/stylelint/stylelint/blob/master/lib/rules/color-named/README.md)\n  - [`color-no-hex`](https://github.com/stylelint/stylelint/blob/master/lib/rules/color-no-hex/README.md)\n  - [`comment-word-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/comment-word-disallowed-list/README.md)\n  - [`declaration-no-important`](https://github.com/stylelint/stylelint/blob/master/lib/rules/declaration-no-important/README.md)\n  - [`declaration-property-unit-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/declaration-property-unit-disallowed-list/README.md)\n  - [`declaration-property-unit-allowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/declaration-property-unit-allowed-list/README.md)\n  - [`declaration-property-value-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/declaration-property-value-disallowed-list/README.md)\n  - [`declaration-property-value-allowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/declaration-property-value-allowed-list/README.md)\n  - [`function-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/function-disallowed-list/README.md)\n  - [`function-url-scheme-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/function-url-scheme-disallowed-list/README.md)\n  - [`function-url-scheme-allowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/function-url-scheme-allowed-list/README.md)\n  - [`function-allowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/function-allowed-list/README.md)\n  - [`media-feature-name-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/media-feature-name-disallowed-list/README.md)\n  - [`media-feature-name-allowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/media-feature-name-allowed-list/README.md)\n  - [`property-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/property-disallowed-list/README.md)\n  - [`property-allowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/property-allowed-list/README.md)\n  - [`selector-attribute-operator-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-attribute-operator-disallowed-list/README.md)\n  - [`selector-attribute-operator-allowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-attribute-operator-allowed-list/README.md)\n  - [`selector-combinator-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-combinator-disallowed-list/README.md)\n  - [`selector-combinator-allowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-combinator-allowed-list/README.md)\n  - [`selector-max-class`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-class/README.md)\n  - [`selector-max-attribute`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-attribute/README.md)\n  - [`selector-max-combinators`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-combinators/README.md)\n  - [`selector-max-id`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-id/README.md)\n  - [`selector-max-pseudo-class`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-pseudo-class/README.md)\n  - [`selector-no-qualifying-type`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-no-qualifying-type/README.md)\n  - [`selector-max-type`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-type/README.md)\n  - [`selector-max-universal`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-universal/README.md)\n  - [`selector-pseudo-class-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-pseudo-class-disallowed-list/README.md)\n  - [`selector-pseudo-class-allowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-pseudo-class-allowed-list/README.md)\n  - [`selector-pseudo-element-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-pseudo-element-disallowed-list/README.md)\n  - [`selector-pseudo-element-allowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-pseudo-element-allowed-list/README.md)\n  - [`unit-disallowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/unit-disallowed-list/README.md)\n  - [`unit-allowed-list`](https://github.com/stylelint/stylelint/blob/master/lib/rules/unit-allowed-list/README.md)\n- Specify acceptable naming patterns using:\n  - [`custom-media-pattern`](https://github.com/stylelint/stylelint/blob/master/lib/rules/custom-media-pattern/README.md)\n  - [`custom-property-pattern`](https://github.com/stylelint/stylelint/blob/master/lib/rules/custom-property-pattern/README.md)\n  - [`selector-class-pattern`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-class-pattern/README.md)\n  - [`selector-id-pattern`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-id-pattern/README.md)\n  - [`selector-nested-pattern`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-nested-pattern/README.md)\n- Specify a notation when there are one or more valid representations using:\n  - [`font-weight-notation`](https://github.com/stylelint/stylelint/blob/master/lib/rules/font-weight-notation/README.md)\n- Specify what types of URLs are allowed using:\n  - [`function-url-no-scheme-relative`](https://github.com/stylelint/stylelint/blob/master/lib/rules/function-url-no-scheme-relative/README.md)\n- Specify a maximum line length using:\n  - [`max-line-length`](https://github.com/stylelint/stylelint/blob/master/lib/rules/max-line-length/README.md)\n\n### Using the config with SugarSS syntax\n\nThe config is broadly compatible with [SugarSS](https://github.com/postcss/sugarss) syntax. You _will_ need to turn off the rules that check braces and semicolons, as so:\n\n```json\n{\n  \"extends\": \"stylelint-config-standard\",\n  \"rules\": {\n    \"block-closing-brace-empty-line-before\": null,\n    \"block-closing-brace-newline-after\": null,\n    \"block-closing-brace-newline-before\": null,\n    \"block-closing-brace-space-before\": null,\n    \"block-opening-brace-newline-after\": null,\n    \"block-opening-brace-space-after\": null,\n    \"block-opening-brace-space-before\": null,\n    \"declaration-block-semicolon-newline-after\": null,\n    \"declaration-block-semicolon-space-after\": null,\n    \"declaration-block-semicolon-space-before\": null,\n    \"declaration-block-trailing-semicolon\": null\n  }\n}\n```\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 - present stylelint authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/stylelint-config-standard/-/stylelint-config-standard-21.0.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/stylelint-config-standard/-/stylelint-config-standard-21.0.0.tgz",
    "hash": "",
    "integrity": "sha512-Yf6mx5oYEbQQJxWuW7X3t1gcxqbUx52qC9SMS3saC2ruOVYEyqmr5zSW6k3wXflDjjFrPhar3kp68ugRopmlzg==",
    "registry": "npm",
    "packageName": "stylelint-config-standard",
    "cacheIntegrity": "sha512-Yf6mx5oYEbQQJxWuW7X3t1gcxqbUx52qC9SMS3saC2ruOVYEyqmr5zSW6k3wXflDjjFrPhar3kp68ugRopmlzg== sha1-SULPonMB62cC+o/EakTaNdGlz9c="
  },
  "registry": "npm",
  "hash": "61fea6c79a1811b4102715ae5bb5f7b7581cc6a6d4c79daa0bd48c4b7b1a0b6aee395604caa9abe73496ea4df05df9438e316b3e16abde4a7af2e811a299a5ce"
}